{
  "program": {
    "description": "A powerful devkit for scaffolding new projects.",
    "initialized": "CLI initialized successfully."
  },
  "new": {
    "command": {
      "description": "Create a new project from a template"
    },
    "project": {
      "description": "Create a new {language} project with the '{template}' template: {description}",
      "name": {
        "argument": "The name of your new project"
      }
    }
  },
  "version": {
    "description": "Output the current version of the CLI."
  },
  "help": {
    "description": "Display help for a command."
  },
  "scaffolding": {
    "project": {
      "start": "Scaffolding {language} project: {project}",
      "success": "‚úÖ {language} project '{project}' created successfully!",
      "fail": "‚ùå Failed to scaffold {language} project: {error}"
    },
    "copy": {
      "start": "üìÇ Coping local template files...",
      "success": "‚úÖ Local template copied successfully!",
      "fail": "‚ùå Failed to copy local template."
    },
    "run": {
      "start": "üì¶ Running official CLI command: {command}...",
      "success": "‚úÖ Official CLI command ran successfully!",
      "fail": "‚ùå Failed to run official CLI command."
    },
    "install": {
      "start": "üì¶ Installing dependencies with {pm}...",
      "success": "‚úÖ Dependencies installed successfully!",
      "fail": "‚ùå Failed to install dependencies."
    },
    "complete": {
      "success": "\nüöÄ Project created successfully! üéâ",
      "next_steps": "\nNext steps:"
    }
  },
  "config": {
    "command": {
      "description": "Manage DevKit settings"
    },
    "set": {
      "command": {
        "description": "Set a configuration value. \n\nAvailable keys:\n  pm, packageManager      - Sets the default package manager to use for new projects.\n                          Possible values: {pmValues}\n  cache, cacheStrategy    - Sets the global caching behavior for remote templates.\n                          Possible values: 'always-refresh', 'never-refresh', 'daily'\n"
      },
      "key": {
        "argument": "The configuration key to set"
      },
      "value": {
        "argument": "The new value for the key"
      },
      "option": {
        "global": "Update the global configuration instead of the local one."
      }
    },
    "init": {
      "command": {
        "description": "Initializes a global configuration file with default settings."
      },
      "start": "Initializing global config at {path}...",
      "success": "Global configuration file created successfully!",
      "fail": "Failed to initialize global config."
    },
    "update": {
      "start": "Updating setting: {key}...",
      "success": "‚úÖ Successfully updated {key} to {value}!",
      "fail": "‚ùå Failed to update setting."
    },
    "cache": {
      "command": {
        "description": "Update the cache strategy for a specific template.",
        "start": "Updating cache strategy for template '{template}'...",
        "fail": "‚ùå Failed to update cache strategy for template '{template}'.",
        "success": "‚ú® Cache strategy for template '{template}' updated to '{strategy}'."
      },
      "template": {
        "argument": "The name of the template to update"
      },
      "strategy": {
        "argument": "The new cache strategy"
      },
      "start": "Updating cache strategy for template '{template}'...",
      "success": "Cache strategy for template '{template}' updated to '{strategy}'",
      "fail": "Failed to update cache strategy for template '{template}'"
    },
    "check": {
      "local": "Checking for local or monorepo configuration...",
      "global": "Local config not found. Checking for global configuration..."
    },
    "found": {
      "local": "Found and using local configuration at {path}.",
      "global": "No local config found. Using global configuration at {path}."
    },
    "not": {
      "found": {
        "default": "No configuration file found. Using default settings."
      }
    }
  },
  "error": {
    "invalid": {
      "key": "Invalid key: '{key}'. Valid keys are: {keys}",
      "value": "Invalid value for {key}. Valid options are: {options}",
      "command": "Invalid command in configuration: '{command}'"
    },
    "config": {
      "parse": "Failed to parse {file}. Using default configuration.",
      "save": "‚ùå Failed to save configuration file: {file}",
      "exists": "File already exists at {path}. Use 'config set' to update it.",
      "not": {
        "found": "Configuration file not found."
      },
      "generic": "Configuration error",
      "init": {
        "fail": "Failed to initialize configuration."
      },
      "read": "Failed to read configuration at {path}."
    },
    "file": {
      "not_found": "Could not find file '{fileName}'."
    },
    "package": {
      "root": {
        "not_found": "Could not find project root containing package.json."
      }
    },
    "version": {
      "read_fail": "Failed to read package.json version."
    },
    "template": {
      "not_found": "Template '{template}' not found in configuration."
    },
    "install": {
      "message": "Installation error:"
    },
    "scaffolding": {
      "unexpected": "An unexpected error occurred during scaffolding.",
      "language": {
        "not_found": "Scaffolding language not found in configuration: '{language}'"
      }
    },
    "command": {
      "config": {
        "cache": {
          "fail": "Failed to update cache strategy for template '{template}'"
        }
      }
    },
    "save": {
      "local": {
        "config": {
          "not_found": "Failed to save local configuration. File not found at '{path}'."
        }
      }
    },
    "git": {
      "generic": "Git error"
    },
    "unexpected": "An unexpected error occurred",
    "unknown": "An unknown error occurred"
  },
  "cache": {
    "clone": {
      "start": "‚ú® Cloning new template from {url}...",
      "success": "‚úÖ Template cloned successfully!",
      "fail": "‚ùå Failed to clone repository."
    },
    "refresh": {
      "start": "üîÑ Refreshing cached template...",
      "success": "‚úÖ Template refreshed successfully!",
      "fail": "‚ùå Failed to refresh template."
    },
    "use": {
      "info": "üöÄ Using cached template for {repoName}."
    },
    "copy": {
      "start": "üìÇ Copying cached template to project directory...",
      "success": "‚úÖ Files copied successfully!",
      "fail": "‚ùå Failed to copy files from cache."
    }
  },
  "warning": {
    "no": {
      "local": {
        "config": "No local project configuration found. Using global or default settings."
      }
    },
    "global": {
      "config": {
        "not": {
          "initialized": "Global configuration not initialized. Run 'devkit config init' to create one."
        }
      }
    }
  }
}
